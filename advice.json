{
	"//" : "Copyright 2018 Atos SE and Worldline",
	"//" : "Licensed under MIT (https://github.com/atosorigin/DevOpsMaturityAssessment/blob/master/LICENSE)",
	
	"Team Agility" : {
		"Advice" : "Reading the Agile Manifesto is a wonderful place to start. Scrum is a popular Agile software development framework that is an excellent strategy when establishing a new team if there isn't currently a way of working in place. Kanban is an evolutionary method for enhancing a team's agility that works effectively when the team already has a working system in place.",
		"Links" : [
			{
				"Type" : "Website",
				"Text" : "Agile Manifesto",
				"Href" : "http://agilemanifesto.org/"
			},
			{
				"Type" : "Video",
				"Text" : "Agile explanation : Neal Ford and Martin Fowler at USI (0:43)",
				"Href" : "https://www.youtube.com/watch?v=GE6lbPLEAzc"
			},
			{
				"Type" : "Video",
				"Text" : "David Anderson's : Systems Thinking Approach to Kanban Deployment (1:31)",
				"Href" : "https://vimeo.com/46272041"
			},
			{
				"Type" : "Book",
				"Text" : "Agile : A successful methodology. Mike Cohn's Scrum for Software Development",
				"Href" : "http://www.scrumguides.org/index.html"
			},
			{
				"Type" : "Book",
				"Text" : "Kanban : David Anderson's article \"Successful Evolutionary Change for Your Technology Business.\"",
				"Href" : "https://www.amazon.com/Succeeding-Agile-Software-Development-Using/dp/0321579364",
				"Paid" : "Yes"
			},
			{
				"Type" : "Book",
				"Text" : "Ken Schwaber and Jeff Sutherland's Scrum Guide",
				"Href" : "https://www.amazon.com/Kanban-Successful-Evolutionary-Technology-Business/dp/0984521402",
				"Paid" : "Yes"
			}
		]
	},
	"Collaboration" : {
		"Advice" : "Consider whether you have the tools needed to facilitate good communication both within and outside of the team. Consider how effective the team's interpersonal behaviours are in facilitating a quick, low-friction, and exact exchange of ideas and emotions.",
		"Links" : [
			{
				"Type" : "Blog",
				"Text" : "Mike Cohn's article Cultivate Communities of Practice",
				"Href" : "https://www.mountaingoatsoftware.com/blog/cultivate-communities-of-practice"
			},
			{
				"Type" : "Video",
				"Text" : "DevOpsChat: Collaboration Tools Interview with Ryan Bryers and Adrian Hepworth (0:22)",
				"Href" : "https://www.youtube.com/watch?v=pF8Y4amhBtA"
			},
			{
				"Type" : "Video",
				"Text" : "DevOpsChat: Team = Product Interview with Jim and Michele McCarthy (0:39)",
				"Href" : "https://www.youtube.com/watch?v=Rs1tdql6Hb0"
			},
			{
				"Type" : "Book",
				"Text" : "Jim and Michele McCarthy's Software For Your Head",
				"Href" : "https://liveingreatness.com/software-for-your-head-book/"
			}
		]
	},
	"Automation" : {
		"Advice" : "Automation is crucial for reducing the time it takes to deliver software. Automation is required if quality and speed are to be transformed. Automation allows environments to be provisioned and configured exactly the same way every time. Automation makes it simple to build, test, deliver, provision, and configure application code. Automation also allows for the monitoring of environments and the response to occurrences (including security concerns) based on a set of rules. Automation ensures consistency, enforces quality, eliminates waste, and increases speed; it is the technical foundation of any DevOps operation",
		
		"ReadMore" : "The general rule of thumb is to automate anything that you perform more than once; nevertheless, there will be diminishing returns and a new code base to manage. Surprisingly, while having a clear and well-communicated automation strategy is beneficial, it is not required for successful adoption and buy-in from technical teams. The question is more about timing than anything else, however automation is one of those things that often gains pace organically in specific areas (e.g., Infrastructure as Code). Begin small with engineering-led experimentation because engineers, in general, perceive the value in automation. We recommend that you:- Encourage day-to-day automation (something that may save 20 minutes but is done several times per week, as once the benefits are seen, automating things becomes addictive). - Use communities of interest to catalyse debates around automation tooling choices, which will eventually result in code, practises, processes, and principles standards.- Review automation on a regular basis as part of retrospectives.- Share automation achievements and mistakes (both can be used to learn!) - Adhere to proper engineering practises, such as storing automation code in a version controlled code repository. When arguing for automation, it is not always about cost savings (almost certainly not based upon the status quo). For example, a business case for test automation based on the current release frequency may not make sense, but it might if the release frequency was reduced to once per day.It's not just about the frequency of releases; automation also dramatically decreases wastage within the system; evaluating the mean time to recovery (MTTR) and the number of defects in production will demonstrate the advantage of automation here. Finally, the advantages of automation include speed and uniformity.",
		
		"Links" : [
			{
				"Type" : "Book",
				"Text" : "Begin with Red Hat Ansible Tower",
				"Href" : "https://www.ansible.com/resources/ebooks/get-started-with-red-hat-ansible-tower"
			},
			{
				"Type" : "Article",
				"Text" : "Various Ansible Whitepapers are available",
				"Href" : "https://www.ansible.com/resources/whitepapers"
			},
			{
				"Type" : "Blog",
				"Text" : "DevOps: Don't create the haystack by Chris Baynham-Hughes",
				"Href" : "https://www.linkedin.com/pulse/devops-dont-create-haystack-chris-baynham-hughes/"
			},
			{
				"Type" : "Blog",
				"Text" : "Luke Kysow's Putting the Dev in DevOps: Why Your Developers Should Write Terraform, too",
				"Href" : "https://medium.com/runatlantis/putting-the-dev-into-devops-why-your-developers-should-write-terraform-too-d3c079dfc6a8"
			},
			{
				"Type" : "Article",
				"Text" : "Automation of Data Centers (Atos Whitepaper)",
				"Href" : "https://atos.net/wp-content/uploads/2018/09/atos-wp-datacenter-automation.pdf"
			}
		]
	},
	"Environments" : {
		"Advice" : "Automation of environment provisioning, configuration, and administration (such as development, QA, and production) is a key component of DevOps adoption. Many tools and approaches can be used to automate the many layers involved, including automated monitoring, patching, build and configuration management, and easy provisioning. To simplify such automation, abstraction techniques such as containerisation are extensively used.",
		"Links" : [
			{
				"Type" : "Blog",
				"Text" : "One year using Kubernetes in production: Lessons learned by Paul Bakker",
				"Href" : "https://techbeacon.com/devops/one-year-using-kubernetes-production-lessons-learned"
			},
			{
				"Type" : "Blog",
				"Text" : "Matt Shealy's list of the top ten automation tools for your DevOps team",
				"Href" : "https://bigdata-madesimple.com/10-automation-tools-your-devops-team-cant-live-without/"
			},
			{
				"Type" : "Video",
				"Text" : "DevOpsChat: Containerisation for DevOps with Miska Kaipiainen (00:19)",
				"Href" : "https://www.youtube.com/watch?v=8mR4q-roSHk"
			},
			{
				"Type" : "Blog",
				"Text" : "10 Infrastructure Automation And Monitoring Devops Tools",
				"Href" : "https://devopscube.com/devops-tools-for-infrastructure-automation/"
			},
			{
				"Type" : "Website",
				"Text" : "Continuous Delivery Foundation (CDF)",
				"Href" : "https://cd.foundation/about/"
			},
			{
				"Type" : "Blog",
				"Text" : "Kristin Baskett's 8 CI/CD Best Practices for Your DevOps Journey",
				"Href" : "https://www.cloudbees.com/blog/8-cicd-best-practices-your-devops-journey"
			},
			{
				"Type" : "Blog",
				"Text" : "DevOps automation best practices: How much is too much? by David Linthicum",
				"Href" : "https://techbeacon.com/devops/devops-automation-best-practices-how-much-too-much"
			}
		]
	},
	"Testing" : {
		"Advice" : "Tests may be conducted rapidly and frequently with automated testing. It allows for the addition of new features while maintaining a high level of assurance that existing functionality will not be broken. As such, it is a critical enabler for releasing software in smaller increments more frequently.",
		"Links" : [
			{
				"Type" : "Blog",
				"Text" : "Martin Fowler's TestPyramid",
				"Href" : "https://martinfowler.com/bliki/TestPyramid.html"
			},
			{
				"Type" : "Article",
				"Text" : "Martin Fowler's Practical Test Pyramid",
				"Href" : "https://martinfowler.com/articles/practical-test-pyramid.html"
			},
			{
				"Type" : "Video",
				"Text" : "Beginner's Automation Testing Tutorial (0:07)",
				"Href" : "https://www.youtube.com/watch?v=RbSlW8jZFe8"
			},
			{
				"Type" : "Video",
				"Text" : "Test Automation at Scale - Netflix Automation Talks (1:16)",
				"Href" : "https://www.youtube.com/watch?v=FrBN94gUn_I"
			},
			{
				"Type" : "Book",
				"Text" : "David Astels' Test-Driven Development: A Practical Guide",
				"Href" : "https://www.amazon.com/Test-Driven-Development-Practical-Guide/dp/0131016490",
				"Paid" : "Yes"
			},
			{
				"Type" : "Book",
				"Text" : "Michael Feathers' Working Effectively with Legacy Code",
				"Href" : "https://www.amazon.com/Working-Effectively-Legacy-Michael-Feathers/dp/0131177052/",
				"Paid" : "Yes"
			}
		]
	},
	"Static Analysis" : {
		"Advice" : "The analysis of software without running the generated programme is known as static code analysis. The analysis is often performed on a version of the source code, although in other circumstances, object code is used. Static analysis aids in the improvement of code quality by identifying potential bugs, code smells, memory leaks, software metrics, and security vulnerabilities.",
		"Links" : [
			{
				"Type" : "Video",
				"Text" : "Static Code Analysis: Scan All Your Code For Bugs - Dr. Jared DeMott (0:19)",
				"Href" : "https://www.youtube.com/watch?v=Heor8BVa4A0"
			},
			{
				"Type" : "Website",
				"Text" : "SonarQube",
				"Href" : "https://www.sonarqube.org/"
			},
			{
				"Type" : "Website",
				"Text" : "Coverity Scan",
				"Href" : "https://scan.coverity.com/"
			},
			{
				"Type" : "Website",
				"Text" : "Klocwork",
				"Href" : "https://www.roguewave.com/products-services/klocwork"
			}
		]
	},
	"Architecture and Design": {
		"Advice" : "It can be difficult to navigate the many and varied alternatives for optimising architecture for DevOps! It is critical to remember that there are no 'correct' solutions. The agility and functionality of Public Cloud environments make them excellent for designing DevOps-focused designs, and the Cloud Providers' own manuals are a fantastic starting point for reading material. Aside from that, there are a variety of books, videos, and vendor tool documentation that can be helpful",
		"Links" : [
			{
				"Type" : "Book",
				"Text" : "Google Site Reliability Engineering Books",
				"Href" : "https://landing.google.com/sre/books/"
			},
			{
				"Type" : "Website",
				"Text" : "DevOps and AWS",
				"Href" : "https://aws.amazon.com/devops/"
			},
			{
				"Type" : "Website",
				"Text" : "Microsoft Azure DevOps Checklist",
				"Href" : "https://docs.microsoft.com/en-us/azure/architecture/checklist/dev-ops"
			},
			{
				"Type" : "Website",
				"Text" : "Microsoft Azure for Architects",
				"Href" : "https://azure.microsoft.com/en-us/resources/azure-for-architects/"
			},
			{
				"Type" : "Website",
				"Text" : "The Twelve-Factor App",
				"Href" : "https://12factor.net/"
			},
			{
				"Type" : "Book",
				"Text" : "The DevOps Handbook: How to Create World-Class Agility, Reliability, and Security in Technology Organizations by Gene Kim, Jez Humble, Patrick Debois and John Willis",
				"Href" : "https://www.amazon.com/DevOps-Handbook-World-Class-Reliability-Organizations/dp/1942788002/",
				"Paid" : "Yes"
			},
			{
				"Type" : "Book",
				"Text" : "The Practice of Cloud System Administration: DevOps and SRE Practices for Web Services by Thomas A. Limoncelli, Strata R. Chalup and Christina J. Hogan",
				"Href" : "https://www.amazon.com/Practice-Cloud-System-Administration-Practices/dp/032194318X/",
				"Paid" : "Yes"
			},
			{
				"Type" : "Book",
				"Text" : "Practical DevOps: Implement DevOps in your organization by effectively building, deploying, testing, and monitoring code by Joakim Verona",
				"Href" : "https://www.amazon.com/Practical-DevOps-organization-effectively-monitoring/dp/1788392574/",
				"Paid" : "Yes"
			},
			{
				"Type" : "Video",
				"Text" : "Rethinking enterprise architecture for DevOps, agile, & cloud native organizations - Michael Cote (0:48)",
				"Href" : "https://www.youtube.com/watch?v=2UquXJsbr9M"
			},
			{
				"Type" : "Video",
				"Text" : "Mastering Chaos - A Netflix Guide to Microservices - Josh Evans (0:53)",
				"Href" : "https://www.youtube.com/watch?v=CZ3wIuvmHeM"
			},
			{
				"Type" : "Book",
				"Text" : "Ansible: Up and Running: Automating Configuration Management and Deployment the Easy Way by Lorin Hochstein and Rene Moser",
				"Href" : "https://www.amazon.com/_/dp/1491979801",
				"Paid" : "Yes"
			},
			{
				"Type" : "Website",
				"Text" : "Puppet: Infrastructure as code",
				"Href" : "https://puppet.com/solutions/infrastructure-as-code"
			}
		]
	},
	"DevOps Practices" : {
		"Advice" : "DevOps relies on a number of technological processes, including Continuous Integration, Continuous Deployment/Delivery, Test Driven Development, Refactoring, and Code Review. The resources provided here provide good overviews. See the detailed report on DevOps Practices for more information.",
		"Links" : [
			{
				"Type" : "Article",
				"Text" : "Building a Service-Oriented Organization with Enterprise DevOps (Atos Whitepaper)",
				"Href" : "https://atos.net/wp-content/uploads/2017/01/DevOps_Building_a_Service_Oriented_Organization-White-Paper-web-FINAL-281116.pdf"
			},
			{
				"Type" : "Blog",
				"Text" : "Martin Fowler's Continuous Integrationr",
				"Href" : "https://martinfowler.com/articles/continuousIntegration.html"
			},
			{
				"Type" : "Website",
				"Text" : "Continuous Supply",
				"Href" : "https://continuousdelivery.com/"
			},
			{
				"Type" : "Video",
				"Text" : "Jez Humble's Continuous Delivery (0:46)",
				"Href" : "https://www.youtube.com/watch?v=skLJuksCRTw"
			},
			{
				"Type" : "Blog",
				"Text" : "Martin Fowler's TestDrivenDevelopment",
				"Href" : "https://martinfowler.com/bliki/TestDrivenDevelopment.html"
			},
			{
				"Type" : "Book",
				"Text" : "James Shore's The Art of Agile Development: Test-Driven Development",
				"Href" : "https://www.jamesshore.com/Agile-Book/test_driven_development.html"
			},
			{
				"Type" : "Website",
				"Text" : "Refactoring.com",
				"Href" : "https://refactoring.com/"
			},
			{
				"Type" : "Blog",
				"Text" : "Jeff Atwood Code Reviews: Just Do It",
				"Href" : "https://blog.codinghorror.com/code-reviews-just-do-it/"
			}
		]
	},
	"CI" : {
		"Advice" : "Continuous Integration (CI) is the process of merging changes back into the main branch (trunk) as frequently as possible, even many times per day. The developer's modifications are validated by starting a build and executing automated tests on it. You avoid the integration hell that occurs when users wait until \"release day\" to merge their changes into the trunk. Continuous Integration places a high value on test automation to ensure that the application is not broken when new commits are integrated into the main branch.",
		"Links" : [
			{
				"Type" : "Article",
				"Text" : "Martin Fowler's Continuous Integration",
				"Href" : "https://martinfowler.com/articles/continuousIntegration.html"
			},
			{
				"Type" : "Blog",
				"Text" : "Martin Fowler's FeatureBranch",
				"Href" : "https://martinfowler.com/bliki/FeatureBranch.html"
			},
			{
				"Type" : "Book",
				"Text" : "Paul M. Duvall's Continuous Integration: Improving Software Quality and Reducing Risk",
				"Href" : "https://www.amazon.com/Continuous-Integration-Improving-Software-Reducing/dp/0321336380",
				"Paid" : "Yes"
			}
		]
	},
	"CD" : {
		"Advice" : "Continuous Delivery (CD) is an extension of Continuous Integration in which the software is automatically released into a production-like quality assurance environment after each build and further automated testing is done. Furthermore, if desired, the build can be readily released into production. Continuous Deployment is a step above Continuous Delivery. Every update that makes it through all stages of your delivery pipeline is automatically released into production with this method. There is no human intervention, and only a failing test prevents the deployment of a new update.",
		"Links" : [
			{
				"Type" : "Article",
				"Text" : "CI/CD Introduction (0:04)",
				"Href" : "https://www.atlassian.com/continuous-delivery/principles/continuous-integration-vs-delivery-vs-deployment"
			},
			{
				"Type" : "Website",
				"Text" : "Sten Pittet discusses the differences between continuous integration, continuous delivery, and continuous deployment",
				"Href" : "https://continuousdelivery.com/"
			},
			{
				"Type" : "Video",
				"Text" : "Professional Guides on GitHub: Integrating Continuously Continuous Supply (0:06)",
				"Href" : "https://www.youtube.com/watch?v=xSv_m3KhUO8"
			},
			{
				"Type" : "Video",
				"Text" : "Jez Humble's Continuous Delivery: Reliable Software Releases Through Build, Test, and Deployment Automation",
				"Href" : "https://www.youtube.com/watch?v=AlrImm1T8Wg"
			},
			{
				"Type" : "Book",
				"Text" : "Continuous Delivery",
				"Href" : "https://www.amazon.com/Continuous-Delivery-Deployment-Automation-Addison-Wesley/dp/0321601912",
				"Paid" : "Yes"
			}
		]
	},
	"TDD" : {
		"Advice" : "Test Driven Development (TDD) is a software development methodology in which automated tests are written before production code. This ensures that up-to-date automated tests are continually maintained and makes software updates easier and less hazardous.",
		"Links" : [
			{
				"Type" : "Blog",
				"Text" : "Martin Fowler's TestDrivenDevelopment",
				"Href" : "https://martinfowler.com/bliki/TestDrivenDevelopment.html"
			},
			{
				"Type" : "Book",
				"Text" : "David Astels' Test-Driven Development: A Practical Guide",
				"Href" : "https://www.amazon.com/gp/product/0131016490/",
				"Paid" : "Yes"
			},
			{
				"Type" : "Book",
				"Text" : "Martin Fowler's Refactoring: Improving the Design of Existing Code",
				"Href" : "https://www.amazon.com/Refactoring-Improving-Existing-Addison-Wesley-Signature/dp/0134757599/",
				"Paid" : "Yes"
			}
		]
	},
	"Code Review" : {
		"Advice" : "Code reviews are a very efficient method of improving software quality while also disseminating information within the team.",
		"Links" : [
			{
				"Type" : "Blog",
				"Text" : "Jeff Atwood's Code Reviews: Just Do It",
				"Href" : "https://blog.codinghorror.com/code-reviews-just-do-it/"
			},
			{
				"Type" : "Book",
				"Text" : "Steve McConnell's Code Complete: A Practical Handbook of Software Construction",
				"Href" : "https://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670/",
				"Paid" : "Yes"
			},
			{
				"Type" : "Book",
				"Text" : "Robert C. Martin's Clean Code: A Handbook of Agile Software Craftsmanship",
				"Href" : "https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882/",
				"Paid" : "Yes"
			},
			{
				"Type" : "Book",
				"Text" : "Andrew Hunt's The Pragmatic Programmer: From Journeyman to Master",
				"Href" : "https://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X/",
				"Paid" : "Yes"
			}
		]
	},
	"Refactoring" : {
		"Advice" : "Refactoring is a technological process that improves the internal quality of code without compromising its external functionality. As technical debt accumulates, the rate at which new functionality can be deployed slows dramatically, making it critical that technical debt be continuously managed. Refactoring is an essential component of Test Driven Development (TDD).",
		"Links" : [
			{
				"Type" : "Website",
				"Text" : "Refactoring.com",
				"Href" : "https://refactoring.com/"
			},
			{
				"Type" : "Website",
				"Text" : "What basically is refactoring?",
				"Href" : "https://www.agilealliance.org/glossary/refactoring"
			},
			{
				"Type" : "Website",
				"Text" : "Martin Fowler's online refactoring collection",
				"Href" : "https://refactoring.com/catalog/"
			},
			{
				"Type" : "Video",
				"Text" : "Learn Code Smells And Level Up Your Game With Code Refactoring! Sandi Metz (0:36)",
				"Href" : "https://www.youtube.com/watch?v=D4auWwMsEnY"
			},
			{
				"Type" : "Video",
				"Text" : "Refactoring Workflows - Martin Fowler (0:27)",
				"Href" : "https://www.youtube.com/watch?v=vqEg37e4Mkw"
			},
			{
				"Type" : "Book",
				"Text" : "Martin Fowler's Refactoring: Improving the Design of Existing Code",
				"Href" : "https://www.amazon.com/Refactoring-Improving-Existing-Addison-Wesley-Signature/dp/0134757599/",
				"Paid" : "Yes"
			}
		]
	},
	"Org Structure, Culture and Incentives" : {
		"Advice" : "Organizational Structure, Culture, and Incentives are crucial for DevOps success, but they are also the most difficult/disruptive factors to modify and get right.",
		"Links" : [
			{
				"Type" : "Blog",
				"Text" : "Mike Cohn discusses the advantages of feature teams",
				"Href" : "https://www.mountaingoatsoftware.com/blog/the-benefits-of-feature-teams"
			},
			{
				"Type" : "Video",
				"Text" : "Culture of Engineering at Spotify",
				"Href" : "https://vimeo.com/85490944"
			},
			{
				"Type" : "Book",
				"Text" : "The Open Organization Field Guide",
				"Href" : "https://opensource.com/open-organization/resources/field-guide"
			},
			{
				"Type" : "Website",
				"Text" : "Management 3.0",
				"Href" : "https://management30.com"
			},
			{
				"Type" : "Video",
				"Text" : "DevOpsChat: Interview with Pawel Brodzinski on \"Giving a Damn\" (00:34)",
				"Href" : "https://www.youtube.com/watch?v=tY4_OTj46h8"
			}
		]
	},
	"Organisation Structure" : {
		"Advice" : "For successful DevOps adoption, the organisation must be organised into cross-functional and independent teams.",
		
		"ReadMore" : "Many organisational structures are defined and linked by functions (specialisations) rather than the outputs required by the business. The problem with function-based organisational structures is that they create a lot of handovers between teams; items get thrown over the fence for the next team to deal with, usually by whining about the prior team's quality and taking up all of the time of the team following them. This is not conducive to the establishment of a collaborative culture. If the organisational structure is improved, both the quality and the flow will improve.",
		
		"Links" : [
			{
				"Type" : "Blog",
				"Text" : "The Benefits of Feature Teams by Mike Cohn",
				"Href" : "https://www.mountaingoatsoftware.com/blog/the-benefits-of-feature-teams"
			},
			{
				"Type" : "Article",
				"Text" : "Building a Service-Oriented Organization with Enterprise DevOps (Atos Whitepaper)",
				"Href" : "https://atos.net/wp-content/uploads/2017/01/DevOps_Building_a_Service_Oriented_Organization-White-Paper-web-FINAL-281116.pdf"
			},
			{
				"Type" : "Video",
				"Text" : "Engineering Culture at Spotify",
				"Href" : "https://vimeo.com/85490944"
			},
			{
				"Type" : "Book",
				"Text" : "Matt Stine's article, Migrating to Cloud-Native Application Architectures",
				"Href" : "https://download3.vmware.com/vmworld/2015/downloads/oreilly-cloud-native-archx.pdf"
			},
			{
				"Type" : "Book",
				"Text" : "Gene Kim, Kevin Behr, and George Spafford's The Phoenix Project",
				"Href" : "https://www.amazon.com/Phoenix-Project-DevOps-Helping-Business/dp/0988262592",
				"Paid" : "Yes"
			}
		]
	},
	"Culture" : {
		"Advice" : "It is vital for effective DevOps adoption to foster the correct culture inside an organisation. It is the \"X Factor\" for any company. An organisation can have the best tool chain in the world, but if it does not collaborate, continuously improve, step outside of its traditional/functionally based tribes, ensure a clear connection between the desired strategic objectives and the software features being built, engage and empower people at all levels, connect everyone to the mission, and embrace experimentation, the full benefits of DevOps will never be realised.",
		
		"ReadMore" : "Because culture change is difficult, many people prefer to concentrate on the tooling components of DevOps. In the way it spreads, culture change is similar to a virus: when first introduced to an organization, it will be attacked by \"business antibodies\" (e.g., \"we don't do it like that here\"). Continuing the analogy, the virus must be strong and constantly fed until it is dominant in the system. There are numerous culture transformation models and methodologies available, and one size does not fit all. True business engagement and alignment (DevOps is not an \"IT problem\"), recognizing that the \"We is stronger than the I,\" a meritocratic, free-speech, open organization (command and control do not yield transformational results), and change through demonstration/delivery are all success factors (not only is demonstrating tangible benefits the most effective way to convince doubters, it is backed through many change models; e.g. using the Satir Model for change, demonstrating a new approach is the \"transforming idea\" and repeating it is the \"practice and integration\" that takes an organization to a new status quo for performance).",
		"Links" : [
			{
				"Type" : "Book",
				"Text" : "Tribal Leadership Revised Edition: Leveraging Natural Groups to Build a Thriving Organization by Dave Logan, John King and Halee Fischer-Wright",
				"Href" : "https://www.amazon.com/Tribal-Leadership-Leveraging-Thriving-Organization/dp/0061251321/",
				"Paid" : "Yes"
			},
			{
				"Type" : "Book",
				"Text" : "Tribal Unity: Getting from Teams to Tribes by Creating a One Team Culture by Em Campbell-Pretty",
				"Href" : "https://www.amazon.com/Tribal-Unity-Getting-Creating-Culture/dp/1537347578/",
				"Paid" : "Yes"
			},
			{
				"Type" : "Book",
				"Text" : "The Open Organization by Jim Whitehurst",
				"Href" : "https://www.amazon.com/Open-Organization-Igniting-Passion-Performance/dp/1625275277/",
				"Paid" : "Yes"
			},
			{
				"Type" : "Book",
				"Text" : "The Open Organization Field Guide",
				"Href" : "https://opensource.com/open-organization/resources/field-guide"
			}
		]
	},
	"Incentivisation" : {
		"Advice" : "Personal incentives are less successful at encouraging desired behaviours in DevOps adoption than team incentives. Within a DevOps strategy, one desires to create product/outcome ownership as well as the concept that those who successfully implement DevOps will \"live and die\" as a team; this aligns profits with collaboration rather than competition.",
		
		"ReadMore" : "Incentives are one of the most contentious topics in any organisation, and there are numerous techniques that may be used. Significant changes to incentive structures, particularly in large organisations, can be extremely disruptive, contentious, and, in certain situations, necessitate consent from unions/employee forums; consequently, there is no perfect implementation we can propose.Our advise, on the other hand, is to take a new look at the existing incentives inside the organisation and ensure that they are as closely matched to the results that the organisation hopes to achieve through DevOps as feasible.Some organisations have eliminated all personal incentives in favour of team-only incentives, while others are restricted by a standard incentive framework/structure but can make minor changes such as assigning weight to acts that benefit others on the team.Giving a bonus to the person who arrives at 3:30 a.m. and gets a system back up and running, rather than rewarding the person who finds and fixes the issue at its root cause so it doesn't topple over again, is a dangerously prevalent error in many incentive structures. Incentives may be used effectively to foster not only DevOps adoption, but also greater unity and collaboration within DevOps teams. Failure to do so frequently leads to team members adhering to their tribes, such as \"I'm a Dev, I'm not performing Ops work/going on call.\"",
		
		"Links" : [
			{
				"Type" : "Website",
				"Text" : "Management 3.0",
				"Href" : "https://management30.com"
			},
			{
				"Type" : "Video",
				"Text" : " DevOpsChat: \"Giving a Damn\" interview with Pawel Brodzinski (00:34)",
				"Href" : "https://www.youtube.com/watch?v=tY4_OTj46h8"
			},
{
				"Type" : "Blog",
				"Text" : "Introducing Open Salaries at Buffer: Our Transparent Formula and All Individual Salaries by Joel Gascoigne",
				"Href" : "https://open.buffer.com/introducing-open-salaries-at-buffer-including-our-transparent-formula-and-all-individual-salaries/"
			},
			{
				"Type" : "Website",
				"Text" : "Holocracy.org",
				"Href" : "https://www.holacracy.org/"
			},			
			{
				"Type" : "Book",
				"Text" : "Accelerate: The Science of Lean Software and DevOps: Building and Scaling High Performing Technology Organisations by Gene Kim, Jez Humble and Nicole Forsgren",
				"Href" : "https://www.amazon.co.uk/dp/1942788339/",
				"Paid" : "Yes"
			}	
		]
	},
	"Standardisation" : {
		"Advice" : "The debates around standardisation versus flexibility are complex and multi-faceted, as are the related decision points of using SaaS vs PaaS vs IaaS. In reality, there is no \"right\" answer, and the total value of standardisation varies. The key to success is to develop a thorough awareness of the relative benefits and drawbacks of each option, which can then be applied to any given situation. Here are some wonderful resources to assist you gain a better knowledge of this.",
		"Links" : [
			{
				"Type" : "Blog",
				"Text" : "Challenges in DevOps Standardization by Lavanya Subbarayalu",
				"Href" : "https://devops.com/challenges-devops-standardization/"
			},
			{
				"Type" : "Blog",
				"Text" : "DevOps Survey Results: The Case for Standardized Continuous Delivery Tools by Heidi Gilmore.",
				"Href" : "https://www.cloudbees.com/blog/devops-survey-results-case-standardized-continuous-delivery-tools"
			},
			{
				"Type" : "Blog",
				"Text" : "Centralized vs. decentralized CI / CD strategies for multiple teams by Adrian Oprea",
				"Href" : "https://oprea.rocks/blog/centralized-vs-decentralized-ci-cd-strategies-for-multiple-teams/"
			},
			{
				"Type" : "Blog",
				"Text" : "When to use SaaS, PaaS, and IaaS by Eamonn Colman",
				"Href" : "https://www.computenext.com/blog/when-to-use-saas-paas-and-iaas/"
			},
			{
				"Type" : "Blog",
				"Text" : "SaaS vs PaaS vs IaaS: What’s The Difference and How To Choose by Stephen Watts",
				"Href" : "https://www.bmc.com/blogs/saas-vs-paas-vs-iaas-whats-the-difference-and-how-to-choose/"
			}
		]
	}
}
